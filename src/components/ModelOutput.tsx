import React from 'react';
import { Bot, Copy, Check } from 'lucide-react';

interface ModelOutputProps {
  output: string;
  isRunning: boolean;
  selectedModel: string;
}

const ModelOutput: React.FC<ModelOutputProps> = ({ output, isRunning, selectedModel }) => {
  const [copied, setCopied] = React.useState(false);

  const handleCopy = async () => {
    if (output) {
      await navigator.clipboard.writeText(output);
      setCopied(true);
      setTimeout(() => setCopied(false), 2000);
    }
  };

  return (
    <div className="bg-white border border-gray-200 rounded-2xl p-8 shadow-sm">
      <div className="flex items-center justify-between mb-6">
        <div className="flex items-center space-x-3">
          <div className="w-10 h-10 bg-black rounded-lg flex items-center justify-center">
            <Bot className="w-5 h-5 text-white" />
          </div>
          <div>
            <h2 className="text-2xl font-bold text-black">AI Response</h2>
            <p className="text-gray-600">Generated by {selectedModel.toUpperCase()}</p>
          </div>
        </div>
        
        {output && (
          <button
            onClick={handleCopy}
            className="flex items-center space-x-2 px-3 py-2 bg-gray-50 hover:bg-gray-100 rounded-lg transition-colors border border-gray-200"
          >
            {copied ? (
              <>
                <Check className="w-4 h-4 text-green-600" />
                <span className="text-sm text-green-600">Copied!</span>
              </>
            ) : (
              <>
                <Copy className="w-4 h-4 text-gray-600" />
                <span className="text-sm text-gray-600">Copy</span>
              </>
            )}
          </button>
        )}
      </div>

      <div className="relative">
        {isRunning ? (
          <div className="h-48 flex items-center justify-center">
            <div className="text-center">
              <div className="inline-flex items-center space-x-2 bg-gray-50 px-4 py-2 rounded-full mb-4 border border-gray-200">
                <div className="w-2 h-2 bg-gray-600 rounded-full animate-bounce"></div>
                <div className="w-2 h-2 bg-gray-600 rounded-full animate-bounce" style={{ animationDelay: '0.1s' }}></div>
                <div className="w-2 h-2 bg-gray-600 rounded-full animate-bounce" style={{ animationDelay: '0.2s' }}></div>
              </div>
              <p className="text-gray-600 font-medium">AI is thinking...</p>
              <p className="text-sm text-gray-500 mt-1">This may take a few moments</p>
            </div>
          </div>
        ) : output ? (
          <div className="bg-gray-50 rounded-lg p-6 border border-gray-200">
            <div className="prose prose-gray max-w-none">
              <pre className="whitespace-pre-wrap font-sans text-gray-800 leading-relaxed">
                {output}
              </pre>
            </div>
          </div>
        ) : (
          <div className="h-48 flex items-center justify-center text-gray-500">
            <div className="text-center">
              <Bot className="w-12 h-12 mx-auto mb-3 opacity-50" />
              <p>AI response will appear here</p>
            </div>
          </div>
        )}
      </div>

      {output && (
        <div className="mt-4 flex items-center justify-between text-sm text-gray-500">
          <span>Response generated in ~2.3s</span>
          <span>{output.length} characters</span>
        </div>
      )}
    </div>
  );
};

export default ModelOutput;